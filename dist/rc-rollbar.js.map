{"version":3,"sources":["rc-rollbar.js"],"names":["angular","module","config","$provide","decorator","$delegate","$injector","$window","exception","cause","Rollbar","error","err","data","$rootScope","get","$emit","result","originalError","originalWarn","warn","decoratedError","msg","apply","arguments","decoratedWarn","warning","provider","RollbarProvider","rollbarProvider","this","rollbarActivated","init","script","_rollbarConfig","isUndefined","isObject","version","source","$document","injector","loadJS","src","onReady","location","scriptTag","createElement","onreadystatechange","appendChild","body","deinit","getter","$log","_bindRollbarMethod","methodName","logInactiveMessage","service","configure","critical","info","debug","scope","verbose","enable","disable","boolean","undefined","enabled","$inject","$get"],"mappings":"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","file":"rc-rollbar.js","sourcesContent":["(function(angular){\n\n  'use strict';\n\n  //Create module rc rollbar\n  var module = angular.module('rc-rollbar', []);\n\n  module.config(['$provide', function($provide) {\n    $provide.decorator('$exceptionHandler', ['$delegate', '$injector', '$window', function($delegate, $injector, $window) {\n      return function (exception, cause) {\n        if($window.Rollbar) {\n          $window.Rollbar.error(exception, {cause: cause}, function(err, data) {\n            var $rootScope = $injector.get('$rootScope');\n            $rootScope.$emit('rollbar:exception', {\n              exception: exception,\n              err: err,\n              data: data.result\n            });\n          });\n        }\n        $delegate(exception, cause);\n      };\n    }]);\n\n    $provide.decorator('$log', ['$delegate', '$injector', '$window', function($delegate, $injector, $window) {\n\n        if($window.Rollbar) {\n            var originalError = $delegate.error;\n            var originalWarn = $delegate.warn;\n\n            $delegate.error = function decoratedError(msg) {\n                $window.Rollbar.error('NG1: ' + msg, function(err, data) {\n                    var $rootScope = $injector.get('$rootScope');\n                    $rootScope.$emit('rollbar:log.error', {\n                        exception: 'error',\n                        err: err,\n                        data: data.result\n                    });\n                });\n\n                originalError.apply($delegate, arguments);\n            };\n\n            $delegate.warn = function decoratedWarn(msg) {\n                $window.Rollbar.warning('NG1: ' + msg, function(err, data) {\n                    var $rootScope = $injector.get('$rootScope');\n                    $rootScope.$emit('rollbar:log.warn', {\n                        exception: 'warning',\n                        err: err,\n                        data: data.result\n                    });\n                });\n\n                originalWarn.apply($delegate, arguments);\n            };\n        }\n\n        return $delegate;\n    }]);\n  }]);\n\n  module.provider('Rollbar', function RollbarProvider() {\n    var rollbarProvider = this;\n    var rollbarActivated = true;\n\n    this.init = function(config, script) {\n      var _rollbarConfig = config;\n\n      if (rollbarActivated) {\n        if (angular.isUndefined(script) && !angular.isObject(script)) {\n          script = {};\n        }\n\n        if (angular.isUndefined(script.version) || !script.version) {\n          script.version = '2.1.0';\n        }\n\n        if (angular.isUndefined(script.source) || !script.source) {\n            script.source = 'https://raw.githubusercontent.com/rollbar/rollbar.js/v' + script.version + '/dist/rollbar.snippet.js';\n        }\n\n        var $document =  angular.injector(['ng']).get('$document');\n        var loadJS = function(src, onReady, location){\n          var scriptTag = $document[0].createElement('script');\n          scriptTag.src = src;\n          scriptTag.onreadystatechange = onReady;\n          location.appendChild(scriptTag);\n        };\n\n        var onReady = function(){\n\n        };\n\n        loadJS(script.source, onReady, $document[0].body);\n      }\n    };\n\n    this.deinit = function () {\n      rollbarActivated = false;\n    };\n\n    function getter($log, $window) {\n\n      function _bindRollbarMethod(methodName) {\n        return function() {\n          $window.Rollbar[methodName].apply($window.Rollbar, arguments);\n        };\n      }\n\n      function logInactiveMessage() {\n        $log.warn(\"Rollbar is deactivated\");\n      }\n\n      var service = {\n        Rollbar: logInactiveMessage,\n\n        configure: logInactiveMessage,\n\n        critical: logInactiveMessage,\n        error: logInactiveMessage,\n        warning: logInactiveMessage,\n        info: logInactiveMessage,\n        debug: logInactiveMessage,\n\n        scope: logInactiveMessage,\n\n        verbose: logInactiveMessage,\n        enable: logInactiveMessage,\n        disable: logInactiveMessage\n      };\n\n      if (rollbarActivated) {\n        service.Rollbar = $window.Rollbar;\n\n        // bind the native Rollbar methods\n        service.configure = _bindRollbarMethod('configure');\n        service.critical = _bindRollbarMethod('critical');\n        service.error = _bindRollbarMethod('error');\n        service.warning = _bindRollbarMethod('warning');\n        service.info = _bindRollbarMethod('info');\n        service.debug = _bindRollbarMethod('debug');\n        service.scope = _bindRollbarMethod('scope');\n\n        service.verbose = function (boolean) {\n          if (boolean === undefined) { boolean = true; }\n          $window.Rollbar.configure({ verbose: boolean });\n        };\n\n        service.enable = function () {\n          $window.Rollbar.configure({ enabled: true });\n        };\n\n        service.disable = function () {\n          $window.Rollbar.configure({ enabled: false });\n        };\n      }\n\n      return service;\n    }\n\n    getter.$inject = ['$log', '$window'];\n\n    this.$get = getter;\n  });\n\n})\n(angular);\n"],"sourceRoot":"dist"}